name: Combined Security Scan Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  # Job 1: SAST - Run SonarQube Scan
  sonarcloud_scan:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Run SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          
      - name: Download SonarQube Report
        run: |
          mkdir -p security-reports
          curl -u ${{ secrets.SONAR_TOKEN }} "https://sonarcloud.io/api/issues/search?componentKeys=your_project_key" -o security-reports/sonar-report.html

  # Job 2: DAST - Run OWASP ZAP Scan
  zap_scan:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Build Docker Image
        run: docker build -t my-python-app .

      - name: Start Application
        run: docker run -d --name my-app -p 8080:8080 my-python-app

      - name: Create Report Directory
        run: mkdir -p zap-reports && chmod 777 zap-reports

      - name: OWASP ZAP Baseline Scan
        uses: zaproxy/action-baseline@v0.7.0
        with:
          target: "http://localhost:8080"
          cmd_options: "-r zap-reports/zap_report.html -J zap-reports/zap_out.json -w zap-reports/zap_report.md"
          docker_name: "ghcr.io/zaproxy/zaproxy:weekly"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload ZAP Reports as Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: zap_reports
          path: zap-reports

      - name: Stop Application
        run: docker stop my-app && docker rm my-app

  # Job 3: SCA - Run OWASP Dependency Check
  sca_scan:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Download OWASP Dependency Check
        run: |
          wget https://github.com/jeremylong/DependencyCheck/releases/download/v7.1.1/dependency-check-7.1.1-release.zip
          unzip dependency-check-7.1.1-release.zip -d dependency-check
          chmod +x dependency-check/dependency-check/bin/dependency-check.sh

      - name: Run OWASP Dependency Check
        run: |
          mkdir -p security-reports
          dependency-check/dependency-check/bin/dependency-check.sh --project "My Project SCA" \
          --scan $(pwd) --format "ALL" --out $(pwd)/security-reports/dependency-check-report

      - name: Upload Dependency Check Report as Artifact
        uses: actions/upload-artifact@v3
        with:
          name: dependency-check-report
          path: security-reports/dependency-check-report

  # Job 4: Combine Reports and Send Email
  combine_reports:
    runs-on: ubuntu-latest
    needs: [sonarcloud_scan, zap_scan, sca_scan]
    steps:
      - name: Download SonarQube Report
        uses: actions/download-artifact@v3
        with:
          name: sonar_report
          path: security-reports

      - name: Download ZAP Report
        uses: actions/download-artifact@v3
        with:
          name: zap_reports
          path: security-reports

      - name: Download Dependency Check Report
        uses: actions/download-artifact@v3
        with:
          name: dependency-check-report
          path: security-reports

      - name: Generate Consolidated HTML Report
        run: |
          echo "<html><body><h1>Consolidated Security Report</h1>" > security-reports/consolidated-report.html
          
          # Add SonarQube HTML Report if available
          if [[ -f "security-reports/sonar-report.html" ]]; then
            echo "<h2>SonarQube SAST Report</h2>" >> security-reports/consolidated-report.html
            cat security-reports/sonar-report.html >> security-reports/consolidated-report.html
          else
            echo "<p>SonarQube report not found!</p>" >> security-reports/consolidated-report.html
          fi
          
          # Add ZAP HTML Report if available
          if [[ -f "security-reports/zap-reports/zap_report.html" ]]; then
            echo "<h2>OWASP ZAP DAST Report</h2>" >> security-reports/consolidated-report.html
            cat security-reports/zap-reports/zap_report.html >> security-reports/consolidated-report.html
          else
            echo "<p>ZAP report not found!</p>" >> security-reports/consolidated-report.html
          fi
          
          # Add Dependency Check HTML Report if available
          if [[ -f "security-reports/dependency-check-report/dependency-check-report.html" ]]; then
            echo "<h2>OWASP Dependency Check SCA Report</h2>" >> security-reports/consolidated-report.html
            cat security-reports/dependency-check-report/dependency-check-report.html >> security-reports/consolidated-report.html
          else
            echo "<p>Dependency Check report not found!</p>" >> security-reports/consolidated-report.html
          fi

          echo "</body></html>" >> security-reports/consolidated-report.html
